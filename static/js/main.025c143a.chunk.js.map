{"version":3,"sources":["components/BusinessList.js","components/BusinessTable.js","components/BusinessGrid.js","components/BusinessDetails.js","App.js","serviceWorker.js","index.js"],"names":["dataFile","require","BusinessList","props","state","businesses","viewType","setViewType","bind","this","setState","stateViewType","className","UncontrolledDropdown","setActiveFromChild","DropdownToggle","caret","outline","color","DropdownMenu","flip","DropdownItem","onClick","BusinessTable","BusinessGrid","Component","headerColumns","Object","keys","map","column","key","startsWith","replace","business","name","href","fixedWidth","size","icon","faCheck","faTimes","booleanFields","propertyName","labelText","Card","CardHeader","CardBody","faMapMarker","address","faPhoneAlt","phone","faClock","hours","to","menuId","businessData","menuData","BusinessDetails","menuItems","window","scrollTo","match","params","filter","length","price","subText","body","CardTitle","CardText","toFixed","App","history","createBrowserHistory","exact","path","render","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.025c143a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { BusinessTable, BusinessGrid } from './';\r\n\r\n// Restaurant Data File.\r\nconst dataFile = require('../data/businesses.json');\r\n\r\nexport default class BusinessList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businesses: dataFile.businesses || [],\r\n      viewType: 'grid',\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.setViewType = this.setViewType.bind(this);\r\n  }\r\n\r\n  setViewType(viewType) {\r\n    this.setState(({ viewType: stateViewType}) => viewType !== stateViewType ? ({ viewType }) : null);\r\n  }\r\n\r\n  // componentDidMount() {\r\n    // https://maps.googleapis.com/maps/api/place/textsearch/json?query=123+main+street&key=AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc\r\n    // axios.get('https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=alfanos+oregon+il&key=AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc')\r\n    //   .then(result => {\r\n        // CmRaAAAAOmfNZQhEKPzYNWHmtbmLg5Kd7guIP2Pp_QsFd8E3cUH2UewiZHsMJAizWJmYVq8_jfFofTsMFpK-92G_27ZowH7y4MjwyBQJkrLhu9meCJbyRvT1rQSbkjTAw4yvzGAWEhAHoq0pPnjJqjnPhsvd4v74GhRZ7gwkZnGQNWsOWM0Ao97ztYyUzw\r\n        // console.log(result.data);\r\n\r\n        // axios.get('https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU&key=AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc')\r\n        // .then(resultX => {\r\n        //   console.log(resultX.data);\r\n        // })\r\n      // })\r\n      // .catch(error => console.log(error));\r\n  // }\r\n\r\n  render() {\r\n    const { businesses, viewType } = this.state;\r\n\r\n    return (\r\n      <div className=\"overflow-auto\">\r\n        <h1 className=\"py-3 bg-dark text-light text-center page-heading\">\r\n          Restaurants and Bars\r\n        </h1>\r\n        <div>\r\n          <UncontrolledDropdown\r\n            setActiveFromChild\r\n            className=\"m-2\"\r\n          >\r\n            <DropdownToggle\r\n              caret\r\n              outline\r\n              color=\"info\"\r\n            >\r\n              View Type\r\n            </DropdownToggle>\r\n            <DropdownMenu flip={false}>\r\n              <DropdownItem\r\n                onClick={() => this.setViewType('list')}\r\n              >\r\n                List\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                onClick={() => this.setViewType('grid')}\r\n              >\r\n                Grid\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n\r\n        <div className=\"mx-2\">\r\n          {viewType === 'list' && (\r\n            <BusinessTable businesses={businesses} />\r\n          )}\r\n\r\n          {viewType === 'grid' && (\r\n            <BusinessGrid businesses={businesses} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function BusinessTable({ businesses }) {\r\n  const headerColumns = Object.keys(businesses[0]);\r\n\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <thead className=\"thead-dark text-center\">\r\n        <tr>\r\n          {headerColumns.map(column => (\r\n            <th key={`${column}-header`} className=\"text-capitalize\">\r\n              {column.startsWith('is') ? column.replace('is', '') : column}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody className=\"text-center text-secondary\">\r\n        {businesses.map(business => (\r\n          <tr key={business.name}>\r\n            {Object.keys(business).map(column => (\r\n                <td key={`${column}-data`} className=\"text-capitalize\">\r\n                  {column === 'phone' ? (\r\n                    <a\r\n                      href={`tel:${business[column]}`}\r\n                      className=\"font-sm\"\r\n                    >\r\n                      {business[column]}\r\n                    </a>\r\n                  ) : (\r\n                    <span className={column === 'name' ? 'font-weight-bold' : 'font-sm'}>\r\n                      {typeof business[column] === 'string' ? (\r\n                        business[column]\r\n                      ) : (\r\n                        <FontAwesomeIcon\r\n                          fixedWidth\r\n                          size=\"lg\"\r\n                          icon={business[column] ? faCheck : faTimes}\r\n                          className={business[column] ? 'text-success' : 'text-danger'}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  )}\r\n                </td>\r\n              ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Button, Card, CardImg, CardBody, CardHeader,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  faCheck, faTimes, faMapMarker,\r\n  faClock, faPhoneAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function BusinessGrid({ businesses }) {\r\n  const booleanFields = [{\r\n    propertyName: 'isCurbside',\r\n    labelText: 'Curbside',\r\n  }, {\r\n    propertyName: 'isDelivery',\r\n    labelText: 'Delivery',\r\n  }, {\r\n    propertyName: 'isInStore',\r\n    labelText: 'In-Store',\r\n  }, {\r\n    propertyName: 'isDrivethrough',\r\n    labelText: 'D-T',\r\n  }];\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4\">\r\n      {businesses.map(business => (\r\n        <div key={business.name} className=\"col mb-4\">\r\n          <Card className=\"shadow\">\r\n            {/* <CardImg\r\n              top\r\n              width=\"100%\"\r\n              alt={business.name}\r\n              src=\"https://via.placeholder.com/150x75\"\r\n            /> */}\r\n            <CardHeader className=\"py-1 bg-dark text-light font-weight-bold font-xl\">\r\n              {business.name}\r\n            </CardHeader>\r\n            <CardBody className=\"py-2 text-secondary\">\r\n              <div className=\"text-truncate\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faMapMarker}\r\n                />\r\n                <span className=\"mx-2\">\r\n                  {business.address}\r\n                </span>\r\n              </div>\r\n              <div className=\"font-weight-bold\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faPhoneAlt}\r\n                />\r\n                <a\r\n                  href={`tel:${business.phone}`}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {business.phone}\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faClock}\r\n                />\r\n                <span className=\"mx-2 text-capitalize\">\r\n                  {business.hours}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"d-flex my-3\">\r\n                {booleanFields.map(({ propertyName, labelText }) => (\r\n                  <div\r\n                    key={propertyName}\r\n                    className=\"d-flex flex-column align-items-center w-25 text-center\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      fixedWidth\r\n                      size=\"2x\"\r\n                      icon={business[propertyName] ? faCheck : faTimes}\r\n                      className={business[propertyName] ? 'text-success' : 'text-danger'}\r\n                    />\r\n                    <span className=\"font-weight-bold font-sm\">\r\n                      {labelText}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <Link\r\n                to={`/businesses/${business.menuId}`}\r\n                className=\"btn btn-block btn-outline-dark\"\r\n              >\r\n                More Info\r\n              </Link>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Card, CardTitle, CardText } from 'reactstrap';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// Restaurant Data File.\r\nconst businessData = require('../data/businesses.json')\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport default class BusinessDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      business: null,\r\n      menuItems: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const { menuId } = this.props.match.params;\r\n    const menuItems = menuData[menuId] || [];\r\n    const business = businessData.businesses.filter(business => business.menuId === menuId)[0];\r\n\r\n    this.setState(() => ({ business, menuItems }))\r\n  }\r\n\r\n  render() {\r\n    const { business, menuItems } = this.state;\r\n\r\n    if (!business) return null;\r\n\r\n    const {\r\n      name,\r\n      address,\r\n      phone,\r\n      hours,\r\n    } = business;\r\n\r\n    const booleanFields = [{\r\n      propertyName: 'isCurbside',\r\n      labelText: 'Curbside',\r\n    }, {\r\n      propertyName: 'isDelivery',\r\n      labelText: 'Delivery',\r\n    }, {\r\n      propertyName: 'isInStore',\r\n      labelText: 'In-Store',\r\n    }, {\r\n      propertyName: 'isDrivethrough',\r\n      labelText: 'D-T',\r\n    }];\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"py-3 bg-dark text-light text-center page-heading\">\r\n          Restaurants and Bars\r\n        </h1>\r\n        <div className=\"d-flex flex-column flex-md-row mt-4\">\r\n          <div className=\"mb-4 px-4 mb-md-0 border-right border-bottom\">\r\n            <h2 className=\"mb-0 text-center text-dark business-heading\">\r\n              {name}\r\n            </h2>\r\n            <p className=\"mb-0 text-center text-secondary\">{address}</p>\r\n            <div className=\"d-sm-flex flex-md-column justify-content-sm-around text-center text-secondary\">\r\n              <div className=\"d-flex justify-content-around font-lg\">\r\n                <span className=\"font-weight-bold\">Phone:</span>\r\n                <a\r\n                  href={`tel:${phone}`}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {phone}\r\n                </a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-around font-lg\">\r\n                <span className=\"font-weight-bold\">Hours:</span>\r\n                <span className=\"mx-2 text-capitalize\">{hours}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex my-3 text-secondary\">\r\n              {booleanFields.map(({ propertyName, labelText }) => (\r\n                <div\r\n                  key={propertyName}\r\n                  className=\"d-flex flex-column align-items-center flex-fill text-center\"\r\n                >\r\n                  <FontAwesomeIcon\r\n                    fixedWidth\r\n                    size=\"2x\"\r\n                    icon={business[propertyName] ? faCheck : faTimes}\r\n                    className={business[propertyName] ? 'text-success' : 'text-danger'}\r\n                  />\r\n                  <span className=\"font-weight-bold font-sm\">\r\n                    {labelText}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-fill px-4\">\r\n            <h3 className=\"text-center border-bottom menu-heading\">Menu</h3>\r\n\r\n            {menuItems.length === 0 && (\r\n              <div className=\"text-center\">\r\n                <p className=\"font-weight-bold font-xl text-dark\">\r\n                  No Menu Available\r\n                </p>\r\n                <span className=\"font-lg text-secondary\">\r\n                  Please check back later as we are always updating the site.\r\n                </span>\r\n                <p className=\"font-lg text-secondary\">\r\n                  If you have a menu for this business, please email it to&nbsp;\r\n                  <a href=\"mailto:jaredhuff85@gmail.com?Subject=Retail%20Info\">Jared</a>\r\n                  .\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              {menuItems.map(({ name, price, subText }) => (\r\n                <Card\r\n                  key={`${name}-${price}`}\r\n                  body\r\n                  className=\"d-flex flex-sm-row align-items-center mb-2 bg-light shadow-sm\"\r\n                >\r\n                  <CardTitle className=\"flex-fill d-flex flex-column mb-2 mb-sm-0  text-dark font-weight-bold font-lg\">\r\n                    <span>{name}</span>\r\n                    {subText && (\r\n                      <small className=\"font-italic\">{subText}</small>\r\n                    )}\r\n                  </CardTitle>\r\n                  <CardText className=\"text-dark font-weight-bold font-xl\">\r\n                    {`$${price.toFixed(2)}`}\r\n                  </CardText>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BusinessList, BusinessDetails } from './components';\n\nimport './index.css';\n\nfunction App() {\n  return (\n    <Router history={createBrowserHistory()}>\n      <Switch>\n        <Route\n          exact\n          path=\"/businesses/:menuId\"\n          render={props => <BusinessDetails {...props} />}\n        />\n        <Route path=\"/\" render={props => <BusinessList {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}