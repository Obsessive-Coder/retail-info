{"version":3,"sources":["components/SiteHeader.js","components/BusinessDetails.js","components/MenuTabs.js","components/MapPage.js","components/MapInfo.js","components/MapListItem.js","components/FilterDropdown.js","components/Services.js","components/BusinessHoursCollapse.js","App.js","serviceWorker.js","index.js"],"names":["SiteHeader","Navbar","dark","color","style","top","zIndex","className","NavbarBrand","tag","Link","to","Nav","navbar","NavItem","NavLink","target","href","src","alt","businessData","require","menuData","BusinessDetails","props","state","business","menuItems","handleAddressClick","bind","this","name","address","navigator","platform","indexOf","window","open","scrollTo","menuId","match","params","businesses","filter","city","google","map","maps","Map","service","places","PlacesService","request","query","fields","findPlaceFromQuery","results","status","PlacesServiceStatus","OK","i","length","geometry","location","lat","lng","photos","image","getUrl","setState","phone","specialHours","regularHours","imageUrl","fixedWidth","icon","faMapMarkerAlt","onClick","faPhoneAlt","faClock","BusinessHoursCollapse","operatingHours","textSize","Services","services","businessName","iconSize","fontSize","containerClassName","zoom","initialCenter","position","width","height","MenuTabs","Component","GoogleApiWrapper","apiKey","useState","activeTabIndex","setActiveTabIndex","displayedCategories","category","categories","a","b","otherIndex","splice","push","separatedMenu","all","categoryMenuItems","itemCategory","unshift","tabs","index","key","TabContent","activeTab","TabPane","tabId","price","subText","Card","body","CardTitle","split","line","CardText","toFixed","businessesData","MapPage","isOperating","isSidebarOpen","selectedBusiness","activeMarker","isInfoWindowShown","filteredLocation","filteredService","mapCenterLocation","mapZoom","defaultMapZoom","toggleIsSidebarOpen","handleMarkerOnClick","handleMapOnClick","handleInfoWindowOnOpen","handleBusinessItemOnClick","handleLocationsItemOnClick","handleServicesItemOnClick","handleGoToOnClick","markerProps","marker","mapInfo","MapInfo","handleCloseOnClick","ReactDOM","render","React","Children","only","document","getElementById","toLowerCase","cityData","includes","history","cities","concat","apply","FilterDropdown","items","labelText","filteredItem","handleItemOnClick","Button","size","faAngleLeft","faAngleRight","Collapse","isOpen","ListGroup","ListGroupItem","isSelected","MapListItem","handleItemOnDoubleClick","containerStyle","title","visible","onClose","onOpen","id","close","right","faTimes","hasOwnProperty","outline","block","isCollapseOpen","setIsOpen","toggleIsCollapseOpen","event","stopPropagation","onDoubleClick","faUtensils","faAngleDown","selectedItem","setSelectedItem","Label","for","Dropdown","toggle","DropdownToggle","caret","minWidth","DropdownMenu","item","DropdownItem","faCheck","daysData","hours","splitHours","day","dayHours","firstDay","shift","faAngleUp","App","createBrowserHistory","exact","path","Boolean","hostname","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ffc869d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\n\r\nexport default function SiteHeader() {\r\n  return (\r\n    <Navbar\r\n      dark\r\n      color=\"dark\"\r\n      style={{ top: 0, zIndex: 999 }}\r\n      className=\"position-fixed w-100 py-0 border-bottom border-warning page-header\"\r\n    >\r\n      <NavbarBrand tag={Link} to=\"/retail-info\" className=\"mr-auto text-extra-light font-xxl\">\r\n        Local Food\r\n      </NavbarBrand>\r\n\r\n      <Nav navbar className=\"flex-row justify-content-around align-items-center ml-auto font-xl\">\r\n        <NavItem className=\"mx-3\">\r\n          <NavLink\r\n            tag={Link}\r\n            to=\"/retail-info\"\r\n            className=\"text-extra-light\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n        <a\r\n          target=\"_blank\"\r\n          href=\"https://www.buymeacoffee.com/P8xFVtj\"\r\n          className=\"d-inline-flex align-items-center rounded-circle coffee-button\"\r\n        >\r\n          <img\r\n            src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\r\n            alt=\"Buy me a coffee\"\r\n            className=\"mx-auto\"\r\n          />\r\n          {/* <span\r\n            style={{ fontSize: '28px !important'}}\r\n            className=\"mx-3\"\r\n          >\r\n            Buy me a coffee\r\n          </span> */}\r\n        </a>\r\n        </NavItem>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  faMapMarkerAlt, faPhoneAlt, faClock\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Map, Marker , GoogleApiWrapper } from 'google-maps-react';\r\nimport { MenuTabs, Services, BusinessHoursCollapse } from './';\r\n\r\n// Restaurant Data File.\r\nconst businessData = require('../data/businesses.json');\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport class BusinessDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      business: null,\r\n      menuItems: [],\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n  }\r\n\r\n  handleAddressClick() {\r\n    const { business: { name, address } } = this.state;\r\n\r\n    if ((navigator.platform.indexOf(\"iPhone\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") !== -1)) {\r\n      window.open(`maps://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const { menuId } = this.props.match.params;\r\n    const menuItems = menuData[menuId] || [];\r\n    const business = businessData.businesses.filter(business => business.menuId === menuId)[0];\r\n    const { name, address, city } = business;\r\n\r\n    const { google } = this.props;\r\n    const map = new google.maps.Map(<div></div>);\r\n\r\n    var service = new google.maps.places.PlacesService(map);\r\n\r\n    const request = {\r\n      query: `${name} ${address}, ${city} IL`,\r\n      fields: ['photos', 'geometry'],\r\n    };\r\n\r\n    service.findPlaceFromQuery(request, (results, status) => {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        for (var i = 0; i < results.length; i++) {\r\n          const {\r\n            geometry: { location: { lat, lng }},\r\n            photos,\r\n          } = results[i];\r\n\r\n          if (photos) {\r\n            business.image = photos[0].getUrl();\r\n          }\r\n\r\n          business.location = {\r\n            lat: lat(),\r\n            lng: lng(),\r\n          };\r\n        }\r\n\r\n        this.setState(() => ({ business, menuItems }));\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { business, menuItems } = this.state;\r\n    const { google } = this.props;\r\n\r\n    if (!business) return null;\r\n\r\n    const {\r\n      name,\r\n      address,\r\n      city,\r\n      phone,\r\n      specialHours,\r\n      regularHours,\r\n      image,\r\n      location,\r\n      photos,\r\n    } = business;\r\n\r\n    const imageUrl = image || photos[0]\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"d-flex flex-column flex-md-row\">\r\n          <div className=\"mb-4 px-1 pb-3 mb-md-0 bg-dark details-sidebar\">\r\n            <img\r\n              src={imageUrl}\r\n              alt={name}\r\n              className=\"w-100 h-auto business-details-image\"\r\n            />\r\n            <div className=\"pt-3 px-3\">\r\n              <h2 className=\"mb-0 text-center text-extra-light font-xxl business-heading\">\r\n                {name}\r\n              </h2>\r\n\r\n\r\n              <div className=\"d-flex align-items-center my-2 font-weight-bold\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faMapMarkerAlt}\r\n                  className=\"text-secondary\"\r\n                />\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={this.handleAddressClick}\r\n                  className=\"d-inline-block mx-2 text-center text-truncate\"\r\n                >\r\n                  {address}\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center my-2 font-weight-bold\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faPhoneAlt}\r\n                  className=\"text-secondary\"\r\n                />\r\n                <a\r\n                  href={`tel:${phone}`}\r\n                  target=\"_blank\"\r\n                  className=\"mx-2\"\r\n                >\r\n                  {phone}\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"d-flex my-2\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faClock}\r\n                  className=\"mt-1 text-secondary\"\r\n                />\r\n\r\n                <BusinessHoursCollapse\r\n                  operatingHours={specialHours || regularHours}\r\n                  textSize=\"font-sm\"\r\n                />\r\n              </div>\r\n\r\n              <Services\r\n                services={business.services}\r\n                businessName={business.name}\r\n                iconSize=\"lg\"\r\n                fontSize=\"font-sm\"\r\n                containerClassName=\"my-3\"\r\n              />\r\n            </div>\r\n\r\n            {menuItems.length > 0 && (\r\n              <div className=\"px-4 px-sm-5 px-md-0\">\r\n                <Map\r\n                  google={google}\r\n                  zoom={16}\r\n                  initialCenter={location}\r\n                  style={{ position: 'relative',  width: '100%', height: '200px' }}\r\n                  className=\"position-relative\"\r\n                >\r\n                  <Marker\r\n                    position={location}\r\n                    onClick={this.handleAddressClick}\r\n                  />\r\n                </Map>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex-fill px-4 py-2 bg-light\">\r\n            <h3 className=\"py-2 text-center text-extra-light bg-dark border-bottom border-warning menu-heading\">\r\n              Menu\r\n            </h3>\r\n\r\n            {menuItems.length > 0 ? (\r\n              <MenuTabs menuItems={menuItems} />\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                <p className=\"font-weight-bold font-xl text-dark\">\r\n                  No Menu Available\r\n                </p>\r\n                <span className=\"font-lg text-secondary\">\r\n                  Please check back later as we are always updating the site.\r\n                </span>\r\n                <p className=\"font-lg text-secondary\">\r\n                  If you have a menu for this business, please email it to&nbsp;\r\n                  <a href=\"mailto:jaredhuff85@gmail.com?Subject=Retail%20Info\">Jared</a>\r\n                  .\r\n                </p>\r\n\r\n                <div>\r\n                  <Map\r\n                    google={google}\r\n                    zoom={16}\r\n                    initialCenter={location}\r\n                    style={{ position: 'relative',  width: '100%', height: '350px' }}\r\n                    className=\"position-relative\"\r\n                  >\r\n                    <Marker\r\n                      position={location}\r\n                      onClick={this.handleAddressClick}\r\n                    />\r\n                  </Map>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc'\r\n})(BusinessDetails);\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Card, CardTitle, CardText, TabContent,\r\n  TabPane, Nav, NavItem, NavLink\r\n} from 'reactstrap';\r\n\r\nexport default function MenuTabs({ menuItems }) {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n\r\n  const displayedCategories = menuItems.map(({ category }) => category);\r\n\r\n  const categories = displayedCategories.filter((a, b) => displayedCategories.indexOf(a) === b);\r\n\r\n  const otherIndex = categories.indexOf('other');\r\n\r\n  if (otherIndex >= 0) {\r\n    categories.splice(otherIndex, 1);\r\n    categories.push('other');\r\n  }\r\n\r\n  const separatedMenu = { all: menuItems };\r\n\r\n  for (let i = 0; i < categories.length; i++) {\r\n    const category = categories[i];\r\n    const categoryMenuItems = menuItems.filter(({\r\n      category: itemCategory\r\n    }) => (category === itemCategory));\r\n\r\n    separatedMenu[category] = categoryMenuItems;\r\n  }\r\n\r\n  categories.unshift('all');\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2 shadow-sm\">\r\n        {categories.map((category, index) => (\r\n          <NavItem key={`${category}-nav`} className=\"flex-fill\">\r\n            <NavLink\r\n              onClick={() => setActiveTabIndex(index)}\r\n              className={`text-capitalize cursor-pointer border-right rounded-0 text-center ${activeTabIndex === index ? 'bg-dark text-info' : 'text-secondary'}`}\r\n            >\r\n              {category}\r\n            </NavLink>\r\n          </NavItem>\r\n        ))}\r\n      </Nav>\r\n      <TabContent activeTab={activeTabIndex} className=\"menu-tab-content\">\r\n        {categories.map((category, index) => (\r\n          <TabPane\r\n            key={`${category}-pane`}\r\n            tabId={index}\r\n          >\r\n            <div>\r\n              {separatedMenu[category].map(({ name, price, subText }) => (\r\n                <Card\r\n                  key={`${name}-${price}`}\r\n                  body\r\n                  className=\"d-flex flex-sm-row align-items-center mb-2 bg-light shadow-sm\"\r\n                >\r\n                  <CardTitle className=\"flex-fill d-flex flex-column mb-2 mb-sm-0 text-info font-weight-bold font-lg\">\r\n                    <span>{name}</span>\r\n                    {subText && (\r\n                      subText.split('\\n').map(line => (\r\n                        <small key={line} className=\"font-italic\">\r\n                          {line}\r\n                        </small>\r\n                      ))\r\n                    )}\r\n                  </CardTitle>\r\n                  <CardText className=\"text-info font-weight-bold font-xl dollar\">\r\n                    {`${price.toFixed(2)}`}\r\n                  </CardText>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </TabPane>\r\n        ))}\r\n      </TabContent>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {\r\n  Button, Collapse, ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\nimport {\r\n  faAngleRight, faAngleLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  Map, Marker , GoogleApiWrapper, InfoWindow\r\n} from 'google-maps-react';\r\nimport { MapListItem, MapInfo, FilterDropdown } from './'\r\n\r\nconst businessesData = require('../data/businesses.json');\r\n\r\nexport class MapPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const businesses = businessesData.businesses.filter(({ isOperating }) => isOperating);\r\n\r\n    this.state = {\r\n      isSidebarOpen: false,\r\n      businesses: businesses || [],\r\n      selectedBusiness: null,\r\n      activeMarker: null,\r\n      isInfoWindowShown: false,\r\n      filteredLocation: null,\r\n      filteredService: null,\r\n      mapCenterLocation: {\r\n        lat: 42.030169,\r\n        lng: -89.363343\r\n      },\r\n      mapZoom: null,\r\n      defaultMapZoom: 12,\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.toggleIsSidebarOpen = this.toggleIsSidebarOpen.bind(this);\r\n    this.handleMarkerOnClick = this.handleMarkerOnClick.bind(this);\r\n    this.handleMapOnClick = this.handleMapOnClick.bind(this);\r\n    this.handleInfoWindowOnOpen = this.handleInfoWindowOnOpen.bind(this);\r\n    this.handleBusinessItemOnClick = this.handleBusinessItemOnClick.bind(this);\r\n    this.handleLocationsItemOnClick = this.handleLocationsItemOnClick.bind(this);\r\n    this.handleServicesItemOnClick = this.handleServicesItemOnClick.bind(this);\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n    this.handleGoToOnClick = this.handleGoToOnClick.bind(this);\r\n  }\r\n\r\n  toggleIsSidebarOpen() {\r\n    this.setState(({ isSidebarOpen }) => ({ isSidebarOpen: !isSidebarOpen }));\r\n  }\r\n\r\n  handleMarkerOnClick(markerProps, marker) {\r\n    this.setState({\r\n      selectedBusiness: markerProps.business,\r\n      activeMarker: marker,\r\n      isInfoWindowShown: true\r\n    })\r\n  }\r\n\r\n  handleMapOnClick() {\r\n    this.setState(({ isInfoWindowShown }) => isInfoWindowShown ? ({\r\n      isInfoWindowShown: false,\r\n      activeMarker: null,\r\n      selectedBusiness: null\r\n    }) : null);\r\n  }\r\n\r\n  handleInfoWindowOnOpen() {\r\n    const mapInfo = (\r\n      <MapInfo\r\n        business={this.state.selectedBusiness}\r\n        handleGoToOnClick={this.handleGoToOnClick}\r\n        handleAddressClick={this.handleAddressClick}\r\n        handleCloseOnClick={this.handleMapOnClick}\r\n      />\r\n    );\r\n    ReactDOM.render(\r\n      React.Children.only(mapInfo),\r\n      document.getElementById(\"info-window\")\r\n    );\r\n  }\r\n\r\n  handleBusinessItemOnClick(business) {\r\n    this.setState(() => ({\r\n      mapCenterLocation: business.location,\r\n      mapZoom: 18,\r\n    }));\r\n  }\r\n\r\n  handleAddressClick(name, address) {\r\n    if ((navigator.platform.indexOf(\"iPhone\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") !== -1)) {\r\n      window.open(`maps://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  handleLocationsItemOnClick(city) {\r\n    let { businesses } = businessesData;\r\n    if (city.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ city: cityData, isOperating }) => (\r\n        isOperating && cityData === city\r\n      ));\r\n    }\r\n\r\n    const { filteredService } = this.state;\r\n    if (filteredService && filteredService.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ services }) => (\r\n        services.includes(filteredService)\r\n      ));\r\n    }\r\n\r\n    this.setState(() => ({ businesses, filteredLocation: city }));\r\n  }\r\n\r\n  handleServicesItemOnClick(service) {\r\n    let { businesses } = businessesData;\r\n    if (service.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ services, isOperating }) => (\r\n        isOperating && services.includes(service)\r\n      ));\r\n    }\r\n\r\n    const { filteredLocation } = this.state;\r\n    if (filteredLocation && filteredLocation.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ city }) => filteredLocation === city);\r\n    }\r\n\r\n    this.setState(() => ({ businesses, filteredService: service }));\r\n  }\r\n\r\n  handleGoToOnClick(menuId) {\r\n    if (!menuId) return;\r\n    const { history } = this.props;\r\n    history.push(`/retail-info/businesses/${menuId}`);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isSidebarOpen,\r\n      activeMarker,\r\n      isInfoWindowShown,\r\n      selectedBusiness,\r\n      mapCenterLocation,\r\n      filteredLocation,\r\n      filteredService,\r\n      mapZoom,\r\n      defaultMapZoom,\r\n    } = this.state;\r\n\r\n    let { businesses } = this.state;\r\n\r\n    const { google } = this.props;\r\n\r\n    let cities = businessesData.businesses.map(({ city }) => city);\r\n    cities = cities.filter((a, b) => cities.indexOf(a) === b);\r\n    cities.unshift('all');\r\n\r\n    let services = businessesData.businesses.map(({ services }) => services);\r\n    services = [].concat.apply([], services);\r\n    services = services.filter((a, b) => services.indexOf(a) === b);\r\n    services.unshift('all');\r\n\r\n    if (filteredLocation && filteredLocation.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ isOperating, city }) => (\r\n        isOperating && city.toLowerCase() === filteredLocation.toLowerCase()\r\n      ));\r\n    }\r\n\r\n    if (filteredService && filteredService.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ isOperating, services }) => (\r\n        isOperating && services.includes(filteredService)\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div className=\"d-flex map-page\">\r\n        <div className={`position-relative border-right border-dark bg-dark map-sidebar ${!isSidebarOpen ? 'closed' : ''}`}>\r\n          <div className={`d-flex justify-content-between align-items-center mw-100 text-secondary sidebar-collapse-header ${!isSidebarOpen ? 'h-100' : ''}`}>\r\n            {isSidebarOpen && (\r\n              <div className=\"d-flex justify-content-center flex-fill py-2\">\r\n                <FilterDropdown\r\n                  items={cities}\r\n                  labelText=\"location\"\r\n                  filteredItem={filteredLocation}\r\n                  handleItemOnClick={this.handleLocationsItemOnClick}\r\n                />\r\n\r\n                <FilterDropdown\r\n                  items={services}\r\n                  labelText=\"service\"\r\n                  filteredItem={filteredService}\r\n                  handleItemOnClick={this.handleServicesItemOnClick}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <Button\r\n              color=\"link\"\r\n              onClick={this.toggleIsSidebarOpen}\r\n              className={`p-2 border-0 text-decoration-none ${!isSidebarOpen ? 'w-100 h-100 d-flex flex-column align-items-center' : ''}`}\r\n            >\r\n              <FontAwesomeIcon\r\n                fixedWidth={isSidebarOpen}\r\n                size={isSidebarOpen ? '2x' : '3x'}\r\n                icon={isSidebarOpen ? faAngleLeft : faAngleRight}\r\n                className=\"text-success\"\r\n              />\r\n              {!isSidebarOpen && (\r\n                <p className=\"mx-auto my-3 text-nowrap font-xxl text-success vertical-text\">Show List</p>\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          <Collapse isOpen={isSidebarOpen} className=\"position-absolute w-100 sidebar-collapse\">\r\n            <ListGroup className=\"mb-5 pb-5 overflow-auto\">\r\n              {businesses.length === 0 && (\r\n                <ListGroupItem\r\n                  className=\"py-2 rounded-0 bg-dark text-secondary\"\r\n                >\r\n                  <p className=\"font-xl\">\r\n                    There are no businesses for these filter options. Please choose different filter options.\r\n                  </p>\r\n                </ListGroupItem>\r\n              )}\r\n\r\n              {businesses.map(business => {\r\n                const isSelected = isInfoWindowShown && selectedBusiness.name === business.name;\r\n                return (\r\n                  <MapListItem\r\n                    key={`${business.name}-${business.city}-${isSelected}`}\r\n                    business={business}\r\n                    isSelected={isSelected}\r\n                    handleItemOnClick={this.handleBusinessItemOnClick}\r\n                    handleItemOnDoubleClick={this.handleGoToOnClick}\r\n                    handleAddressClick={this.handleAddressClick}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              <ListGroupItem\r\n                className=\"py-2 rounded-0 bg-dark border-0 text-secondary\"\r\n              >\r\n                <p className=\"d-none\">\r\n                  This is a dummy list item so that the last item is in view on mobile devices.\r\n                </p>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Collapse>\r\n        </div>\r\n\r\n        <div className=\"flex-fill\">\r\n          <Map\r\n            key={`${mapCenterLocation.lat}-${mapCenterLocation.lng}`}\r\n            google={google}\r\n            zoom={mapZoom || defaultMapZoom}\r\n            initialCenter={mapCenterLocation}\r\n            onClick={this.handleMapOnClick}\r\n            className=\"position-relative\"\r\n            containerStyle={{ height: '100%' }}\r\n          >\r\n            {businesses.map((business, index) => (\r\n              <Marker\r\n                key={index}\r\n                title={business.name}\r\n                name={business.name}\r\n                business={business}\r\n                position={business.location}\r\n                onClick={this.handleMarkerOnClick}\r\n              />\r\n            ))}\r\n            <InfoWindow\r\n              marker={activeMarker}\r\n              visible={isInfoWindowShown}\r\n              onClose={this.handleMapOnClick}\r\n              onOpen={this.handleInfoWindowOnOpen}\r\n            >\r\n              <div id=\"info-window\" />\r\n            </InfoWindow>\r\n          </Map>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc'\r\n})(MapPage);\r\n\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport {\r\n  faMapMarkerAlt, faPhoneAlt, faClock, faTimes\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Services, BusinessHoursCollapse } from './';\r\n\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport default function MapInfo({\r\n  business, handleGoToOnClick, handleAddressClick,\r\n  handleCloseOnClick,\r\n}) {\r\n  const {\r\n    name,\r\n    address,\r\n    city,\r\n    phone,\r\n    specialHours,\r\n    regularHours,\r\n    services,\r\n    menuId,\r\n  } = business;\r\n\r\n  return (\r\n    <div id=\"test-div\">\r\n      <div className=\"position-relative mb-1\">\r\n        <h6 className=\"mx-4 text-center text-extra-light font-weight-bold text-truncate\">\r\n          {name}\r\n        </h6>\r\n        <Button\r\n          close\r\n          size=\"sm\"\r\n          onClick={handleCloseOnClick}\r\n          style={{ top: '-5px', right: 0 }}\r\n          className=\"position-absolute text-danger outline-none\"\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} size=\"xs\" />\r\n        </Button>\r\n      </div>\r\n      <div className=\"d-flex align-items-center font-weight-bold\">\r\n        <FontAwesomeIcon\r\n          fixedWidth\r\n          icon={faMapMarkerAlt}\r\n          className=\"text-secondary\"\r\n        />\r\n        <Button\r\n          color=\"link\"\r\n          size=\"sm\"\r\n          onClick={() => handleAddressClick(name, address)}\r\n          className=\"mx-2 p-0 border-0\"\r\n        >\r\n          <span className=\"font-sm\">{address}</span>\r\n        </Button>\r\n      </div>\r\n      <div className=\"d-flex align-items-center my-1 font-weight-bold\">\r\n        <FontAwesomeIcon\r\n          fixedWidth\r\n          icon={faPhoneAlt}\r\n          className=\"text-secondary\"\r\n        />\r\n        <a\r\n          href={`tel:${phone}`}\r\n          target=\"_blank\"\r\n          className=\"mx-2 font-sm\"\r\n        >\r\n          {phone}\r\n        </a>\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        <FontAwesomeIcon\r\n          fixedWidth\r\n          icon={faClock}\r\n          className=\"mt-1 text-secondary\"\r\n        />\r\n\r\n        <BusinessHoursCollapse\r\n          operatingHours={specialHours || regularHours}\r\n          textSize=\"font-sm\"\r\n        />\r\n      </div>\r\n\r\n      <Services\r\n        services={services}\r\n        businessName={name}\r\n        fontSize=\"font-xs\"\r\n        iconSize=\"2x\"\r\n        containerClassName=\"my-3\"\r\n      />\r\n\r\n      <div className=\"d-flex justify-content-around align-items-center\">\r\n        {menuData.hasOwnProperty(menuId) && (\r\n          <div className=\"d-flex flex-column font-weight-bold text-center text-success\">\r\n            <span>\r\n              Menu\r\n            </span>\r\n            <span>\r\n              Available\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          outline\r\n          block={!menuData.hasOwnProperty(menuId)}\r\n          color=\"info\"\r\n          size=\"sm\"\r\n          onClick={() => handleGoToOnClick(menuId)}\r\n          className=\"px-3\"\r\n        >\r\n          More Info\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Collapse, ListGroupItem } from 'reactstrap';\r\nimport {\r\n  faCheck, faTimes, faAngleDown, faAngleLeft,\r\n  faMapMarkerAlt, faPhoneAlt, faUtensils,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Services } from './';\r\n\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport default function MapListItem({\r\n  business, isSelected, handleItemOnClick,\r\n  handleItemOnDoubleClick, handleAddressClick\r\n}) {\r\n  const [isCollapseOpen, setIsOpen] = useState(isSelected);\r\n\r\n  const toggleIsCollapseOpen = (event) => {\r\n    event.stopPropagation();\r\n    setIsOpen(!isCollapseOpen);\r\n  }\r\n\r\n  return (\r\n    <ListGroupItem\r\n      key={business.name}\r\n      onClick={event => {\r\n        toggleIsCollapseOpen(event);\r\n        handleItemOnClick(business);\r\n      }}\r\n      onDoubleClick={() => handleItemOnDoubleClick(business.menuId)}\r\n      className=\"py-2 rounded-0 cursor-pointer bg-dark text-extra-light\"\r\n    >\r\n      <div className=\"d-flex justify-content-between align-items-center \">\r\n        <span className=\"flex-fill pr-4 font-weight-bold text-capitalize text-truncate\">\r\n          {business.name}\r\n        </span>\r\n\r\n        <div className=\"d-flex mx-2\">\r\n          {menuData.hasOwnProperty(business.menuId) && (\r\n            <div>\r\n              <FontAwesomeIcon\r\n                fixedWidth\r\n                icon={faUtensils}\r\n                className=\"mx-1 text-success\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div>\r\n            <a\r\n              href={`tel:${business.phone}`}\r\n              target=\"_blank\"\r\n              className=\"mx-1 font-sm\"\r\n            >\r\n              <FontAwesomeIcon\r\n                fixedWidth\r\n                icon={faPhoneAlt}\r\n                className=\"text-info\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div className=\"text-truncate\">\r\n            <Link\r\n              to=\"#\"\r\n              onClick={() => handleAddressClick(business.name, business.address)}\r\n              className=\"mx-1 font-sm\"\r\n            >\r\n              <FontAwesomeIcon\r\n                fixedWidth\r\n                icon={faMapMarkerAlt}\r\n                className=\"text-info\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <Button\r\n          outline\r\n          color=\"link\"\r\n          onClick={toggleIsCollapseOpen}\r\n          className=\"p-0 text-extra-light outline-none\"\r\n        >\r\n          <FontAwesomeIcon\r\n            fixedWidth\r\n            size=\"lg\"\r\n            icon={isCollapseOpen ? faAngleDown : faAngleLeft}\r\n          />\r\n        </Button>\r\n      </div>\r\n\r\n      <Collapse\r\n        isOpen={isCollapseOpen}\r\n        className=\"pt-2\"\r\n      >\r\n        <div className=\"d-flex justify-content-around align-items-center flex-wrap\">\r\n          <Services\r\n            services={business.services}\r\n            businessName={business.name}\r\n            fontSize=\"font-xs\"\r\n          />\r\n\r\n          <div className=\"d-flex justify-content-around align-items-center\">\r\n            {menuData.hasOwnProperty(business.menuId) && (\r\n              <div className=\"d-flex flex-column font-weight-bold font-xs text-center text-success\">\r\n                <span>\r\n                  Menu\r\n                </span>\r\n                <span>\r\n                  Available\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            <Link\r\n              to={`/retail-info/businesses/${business.menuId}`}\r\n              className=\"btn btn-outline-success btn-sm px-2 mx-2\"\r\n            >\r\n              More Info\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n    </ListGroupItem>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dropdown, DropdownToggle, DropdownMenu,\r\n  DropdownItem, Label\r\n} from 'reactstrap';\r\n\r\nexport default function FilterDropdown({\r\n  items, labelText, filteredItem, handleItemOnClick\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(filteredItem || 'all');\r\n\r\n  return (\r\n    <div className=\"mx-3\">\r\n      <Label\r\n        for={`${labelText}-dropdown`}\r\n        className=\"m-0 text-extra-light text-capitalize font-weight-bold\"\r\n      >\r\n        {labelText}\r\n      </Label>\r\n      <Dropdown\r\n        id={`${labelText}-dropdown`}\r\n        isOpen={isOpen}\r\n        toggle={() => setIsOpen(!isOpen)}\r\n      >\r\n        <DropdownToggle\r\n          caret\r\n          outline\r\n          color=\"info\"\r\n          size=\"sm\"\r\n          style={{ minWidth: '100px' }}\r\n          className=\"d-flex justify-content-between align-items-center text-capitalize\"\r\n        >\r\n          <span className=\"mx-2\">{selectedItem}</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu className=\"bg-dark shadow\">\r\n          {items.map(item => (\r\n            <DropdownItem\r\n              key={`${item}-dropdown-item`}\r\n              onClick={() => {\r\n                setSelectedItem(item);\r\n                handleItemOnClick(item);\r\n              }}\r\n              className=\"bg-dark text-capitalize text-extra-light filter-list-item\"\r\n            >\r\n              {item}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function Services({\r\n  businessName, services, iconSize,\r\n  fontSize, containerClassName\r\n}) {\r\n  return (\r\n    <div className={`d-flex justify-content-around flex-wrap text-extra-light ${containerClassName}`}>\r\n      {services.map(service => (\r\n        <div\r\n          key={`${businessName}-${service}`}\r\n          className=\"d-flex flex-column align-items-center mx-2 text-center\"\r\n        >\r\n          <FontAwesomeIcon\r\n            fixedWidth\r\n            size={iconSize}\r\n            icon={faCheck}\r\n            className={'text-success'}\r\n          />\r\n          <span className={`font-weight-bold text-capitalize ${fontSize}`}>\r\n            {service}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Collapse, Button } from 'reactstrap';\r\nimport {\r\n  faAngleUp, faAngleDown\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function BusinessHoursCollapse({\r\n  operatingHours, textSize\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleIsOpen = () => setIsOpen(!isOpen);\r\n\r\n  // const copiedOperatingHours = operatingHours.concat([]);\r\n  // const firstDayHours = firstDay.split(': ')\r\n  // firstDayHours.shift();\r\n  // const firstDaySplit = firstDayHours[0].split(' – ');\r\n  // const [ openTime, closeTime ] = firstDaySplit;\r\n\r\n  const daysData = operatingHours.map(hours => {\r\n    const splitHours = hours.split(': ')\r\n\r\n    const [day, dayHours ] = splitHours\r\n\r\n    return { day, dayHours };\r\n  });\r\n\r\n  const firstDay = daysData.shift();\r\n\r\n  return (\r\n    <div className=\"flex-fill mx-2\">\r\n      <Button\r\n        color=\"link\"\r\n        size=\"sm\"\r\n        onClick={toggleIsOpen}\r\n        className={`d-flex align-items-center p-0 border-0 text-extra-light text-decoration-none ${operatingHours.length > 0 ? 'cursor-pointer': 'cursor-default'}`}\r\n      >\r\n        <div className={`d-inline-block ${textSize}`}>\r\n          {operatingHours.length > 0 ? (\r\n            <Fragment>\r\n              <span className=\"font-weight-bold\">\r\n                {firstDay.day}\r\n              </span>\r\n              <span className=\"mx-1 text-truncate\">\r\n                {firstDay.dayHours}\r\n              </span>\r\n            </Fragment>\r\n          ) : (\r\n            <span className=\"font-weight-bold\">\r\n              Unavailable\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {operatingHours.length > 1 && (\r\n          <FontAwesomeIcon\r\n            fixedWidth\r\n            icon={isOpen ? faAngleUp : faAngleDown}\r\n            className=\"text-secondary\"\r\n          />\r\n        )}\r\n      </Button>\r\n\r\n      <Collapse\r\n        isOpen={isOpen && daysData.length > 0}\r\n        className=\"text-left\"\r\n      >\r\n        {daysData.map(({ day, dayHours }, index) => (\r\n          <div\r\n            key={`${day}-operating-hours`}\r\n            className={`text-extra-light ${textSize} ${index === 0 ? 'mb-1' : 'my-1'}`}\r\n          >\r\n            <span className=\"font-weight-bold\">\r\n              {day}\r\n            </span>\r\n            <span className=\"mx-1 text-truncate\">\r\n              {dayHours}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Route, Router, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BusinessDetails, SiteHeader, MapPage\r\n} from './components';\r\n\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={createBrowserHistory()}>\r\n      <SiteHeader />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/retail-info/businesses/:menuId\"\r\n          render={props => <BusinessDetails {...props} />}\r\n        />\r\n\r\n        <Route path=\"/\" render={props => <MapPage {...props} />} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}