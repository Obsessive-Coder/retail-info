{"version":3,"sources":["components/SiteHeader.js","components/SiteFooter.js","components/BusinessDetails.js","components/MenuTabs.js","components/MapPage.js","components/MapInfo.js","components/MapListItem.js","components/FilterDropdown.js","components/Services.js","App.js","serviceWorker.js","index.js"],"names":["SiteHeader","useState","Navbar","dark","color","className","NavbarBrand","tag","Link","to","Nav","navbar","NavItem","NavLink","SiteFooter","style","bottom","left","right","target","href","width","height","src","alt","businessData","require","menuData","BusinessDetails","props","state","business","menuItems","handleAddressClick","bind","this","name","address","city","navigator","platform","indexOf","window","open","scrollTo","menuId","match","params","businesses","filter","google","map","maps","Map","service","places","PlacesService","request","query","fields","findPlaceFromQuery","results","status","PlacesServiceStatus","OK","i","length","geometry","location","lat","lng","photos","image","getUrl","setState","phone","hours","onClick","Services","services","businessName","iconSize","fontSize","containerClassName","zoom","initialCenter","position","MenuTabs","Component","GoogleApiWrapper","apiKey","activeTabIndex","setActiveTabIndex","displayedCategories","category","categories","a","b","otherIndex","splice","push","separatedMenu","all","categoryMenuItems","itemCategory","unshift","tabs","index","key","TabContent","activeTab","TabPane","tabId","price","subText","Card","body","CardTitle","split","line","CardText","toFixed","businessesData","MapPage","isOpen","isSidebarOpen","selectedBusiness","activeMarker","isInfoWindowShown","filteredLocation","filteredService","mapCenterLocation","toggleIsSidebarOpen","handleMarkerOnClick","handleMapOnClick","handleInfoWindowOnOpen","handleBusinessItemOnClick","handleLocationsItemOnClick","handleServicesItemOnClick","handleGoToOnClick","markerProps","marker","mapInfo","MapInfo","ReactDOM","render","React","Children","only","document","getElementById","toLowerCase","cityData","includes","history","cities","concat","apply","FilterDropdown","items","labelText","handleItemOnClick","Button","fixedWidth","size","icon","faAngleLeft","faAngleRight","Collapse","ListGroup","isSelected","MapListItem","containerStyle","title","visible","onClose","onOpen","id","faPhoneAlt","faClock","hasOwnProperty","outline","isCollapseOpen","setIsOpen","ListGroupItem","faUtensils","faMapMarkerAlt","event","stopPropagation","faAngleDown","selectedItem","setSelectedItem","Label","for","Dropdown","toggle","DropdownToggle","caret","minWidth","DropdownMenu","item","DropdownItem","faCheck","App","createBrowserHistory","exact","path","Boolean","hostname","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5a73bef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\n\r\nexport default function SiteHeader() {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const toggleIsOpen = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar\r\n      dark\r\n      color=\"dark\"\r\n      className=\"py-0 border-bottom border-warning page-header\"\r\n    >\r\n      <NavbarBrand tag={Link} to=\"/retail-info\" className=\"mr-auto font-xxl\">\r\n        Restaurants and Bars\r\n      </NavbarBrand>\r\n\r\n      <Nav navbar className=\"flex-row justify-content-around ml-auto font-xl\">\r\n        <NavItem className=\"mx-3\">\r\n          <NavLink tag={Link} to=\"/retail-info\">Home</NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SiteFooter() {\r\n  return (\r\n    <div\r\n      style={{ bottom: 0, left: 0, right: 0 }}\r\n      className=\"position-sticky px-3 py-2 bg-dark text-center border-top border-warning\"\r\n    >\r\n      <a\r\n        target=\"_blank\"\r\n        href=\"https://www.buymeacoffee.com/P8xFVtj\"\r\n        className=\"d-inline-flex align-items-center rounded-circle coffee-button\"\r\n        style={{ width: '48px', height: '48px' }}\r\n      >\r\n        <img\r\n          src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\r\n          alt=\"Buy me a coffee\"\r\n          className=\"mx-auto\"\r\n        />\r\n        {/* <span\r\n          style={{ fontSize: '28px !important'}}\r\n          className=\"mx-3\"\r\n        >\r\n          Buy me a coffee\r\n        </span> */}\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Map, Marker , GoogleApiWrapper } from 'google-maps-react';\r\nimport { MenuTabs, Services } from './';\r\n\r\n// Restaurant Data File.\r\nconst businessData = require('../data/businesses.json');\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport class BusinessDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      business: null,\r\n      menuItems: [],\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n  }\r\n\r\n  handleAddressClick() {\r\n    const { business: { name, address, city } } = this.state;\r\n\r\n    if ((navigator.platform.indexOf(\"iPhone\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") !== -1)) {\r\n      window.open(`maps://maps.google.com/maps/dir/?daddr=${name}%20${address},%20${city}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/maps/dir/?daddr=${name}%20${address},%20${city}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const { menuId } = this.props.match.params;\r\n    const menuItems = menuData[menuId] || [];\r\n    const business = businessData.businesses.filter(business => business.menuId === menuId)[0];\r\n    const { name, address, city } = business;\r\n\r\n    const { google } = this.props;\r\n    const map = new google.maps.Map(<div></div>);\r\n\r\n    var service = new google.maps.places.PlacesService(map);\r\n\r\n    const request = {\r\n      query: `${name} ${address}, ${city} IL`,\r\n      fields: ['photos', 'geometry'],\r\n    };\r\n\r\n    service.findPlaceFromQuery(request, (results, status) => {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        for (var i = 0; i < results.length; i++) {\r\n          const {\r\n            geometry: { location: { lat, lng }},\r\n            photos,\r\n          } = results[i];\r\n          if (photos) {\r\n            business.image = photos[0].getUrl();\r\n          }\r\n\r\n          business.location = {\r\n            lat: lat(),\r\n            lng: lng(),\r\n          };\r\n        }\r\n\r\n        this.setState(() => ({ business, menuItems }));\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { business, menuItems } = this.state;\r\n    const { google } = this.props;\r\n\r\n    if (!business) return null;\r\n\r\n    const {\r\n      name,\r\n      address,\r\n      city,\r\n      phone,\r\n      hours,\r\n      image,\r\n      location,\r\n    } = business;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"d-flex flex-column flex-md-row\">\r\n          <div className=\"mb-4 px-1 pb-3 mb-md-0 bg-dark border-right border-bottom details-sidebar\">\r\n            <img\r\n              src={image}\r\n              alt={name}\r\n              className=\"w-100 h-auto business-details-image\"\r\n            />\r\n            <div className=\"pt-3 px-3\">\r\n              <h2 className=\"mb-0 text-center text-light business-heading\">\r\n                {name}\r\n              </h2>\r\n              <Link\r\n                to=\"#\"\r\n                onClick={this.handleAddressClick}\r\n                className=\"d-inline-block w-100 mx-2 text-center\"\r\n              >\r\n                {`${address}, ${city}`}\r\n              </Link>\r\n              <div className=\"d-sm-flex flex-md-column justify-content-sm-around text-center text-secondary\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <span className=\"font-weight-bold\">Phone:</span>\r\n                  <a\r\n                    href={`tel:${phone}`}\r\n                    target=\"_blank\"\r\n                    className=\"mx-2\"\r\n                  >\r\n                    {phone}\r\n                  </a>\r\n                </div>\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <span className=\"font-weight-bold\">Hours:</span>\r\n                  <span className=\"mx-2 text-capitalize\">{hours}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <Services\r\n                services={business.services}\r\n                businessName={business.name}\r\n                iconSize=\"lg\"\r\n                fontSize=\"font-sm\"\r\n                containerClassName=\"my-3\"\r\n              />\r\n            </div>\r\n\r\n            {menuItems.length > 0 && (\r\n              <div className=\"px-4 px-sm-5 px-md-0\">\r\n                <Map\r\n                  google={google}\r\n                  zoom={16}\r\n                  initialCenter={location}\r\n                  style={{ position: 'relative',  width: '100%', height: '200px' }}\r\n                  className=\"position-relative\"\r\n                >\r\n                  <Marker\r\n                    position={location}\r\n                    onClick={this.handleAddressClick}\r\n                  />\r\n                </Map>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex-fill px-4 py-2 bg-light\">\r\n            <h3 className=\"py-2 text-center text-light bg-dark border-bottom border-warning menu-heading\">\r\n              Menu\r\n            </h3>\r\n\r\n            {menuItems.length === 0 && (\r\n              <div className=\"text-center\">\r\n                <p className=\"font-weight-bold font-xl text-dark\">\r\n                  No Menu Available\r\n                </p>\r\n                <span className=\"font-lg text-secondary\">\r\n                  Please check back later as we are always updating the site.\r\n                </span>\r\n                <p className=\"font-lg text-secondary\">\r\n                  If you have a menu for this business, please email it to&nbsp;\r\n                  <a href=\"mailto:jaredhuff85@gmail.com?Subject=Retail%20Info\">Jared</a>\r\n                  .\r\n                </p>\r\n\r\n                <div>\r\n                  <Map\r\n                    google={google}\r\n                    zoom={16}\r\n                    initialCenter={location}\r\n                    style={{ position: 'relative',  width: '100%', height: '350px' }}\r\n                    className=\"position-relative\"\r\n                  >\r\n                    <Marker\r\n                      position={location}\r\n                      onClick={this.handleAddressClick}\r\n                    />\r\n                  </Map>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {menuItems.length > 0 && (\r\n              <MenuTabs menuItems={menuItems} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc'\r\n})(BusinessDetails);\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Card, CardTitle, CardText, TabContent,\r\n  TabPane, Nav, NavItem, NavLink\r\n} from 'reactstrap';\r\n\r\nexport default function MenuTabs({ menuItems }) {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n\r\n  const displayedCategories = menuItems.map(({ category }) => category);\r\n\r\n  const categories = displayedCategories.filter((a, b) => displayedCategories.indexOf(a) === b);\r\n\r\n  const otherIndex = categories.indexOf('other');\r\n\r\n  if (otherIndex >= 0) {\r\n    categories.splice(otherIndex, 1);\r\n    categories.push('other');\r\n  }\r\n\r\n  const separatedMenu = { all: menuItems };\r\n\r\n  for (let i = 0; i < categories.length; i++) {\r\n    const category = categories[i];\r\n    const categoryMenuItems = menuItems.filter(({\r\n      category: itemCategory\r\n    }) => (category === itemCategory));\r\n\r\n    separatedMenu[category] = categoryMenuItems;\r\n  }\r\n\r\n  categories.unshift('all');\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2\">\r\n        {categories.map((category, index) => (\r\n          <NavItem key={`${category}-nav`} className=\"flex-fill\">\r\n            <NavLink\r\n              onClick={() => setActiveTabIndex(index)}\r\n              className={`text-capitalize cursor-pointer border-right rounded-0 ${activeTabIndex === index ? 'bg-dark text-info' : 'text-secondary'}`}\r\n            >\r\n              {category}\r\n            </NavLink>\r\n          </NavItem>\r\n        ))}\r\n      </Nav>\r\n      <TabContent activeTab={activeTabIndex} className=\"menu-tab-content\">\r\n        {categories.map((category, index) => (\r\n          <TabPane\r\n            key={`${category}-pane`}\r\n            tabId={index}\r\n          >\r\n            <div>\r\n              {separatedMenu[category].map(({ name, price, subText }) => (\r\n                <Card\r\n                  key={`${name}-${price}`}\r\n                  body\r\n                  className=\"d-flex flex-sm-row align-items-center mb-2 bg-light shadow-sm\"\r\n                >\r\n                  <CardTitle className=\"flex-fill d-flex flex-column mb-2 mb-sm-0 text-info font-weight-bold font-lg\">\r\n                    <span>{name}</span>\r\n                    {subText && (\r\n                      subText.split('\\n').map(line => (\r\n                        <small key={line} className=\"font-italic\">\r\n                          {line}\r\n                        </small>\r\n                      ))\r\n                    )}\r\n                  </CardTitle>\r\n                  <CardText className=\"text-info font-weight-bold font-xl\">\r\n                    {`$${price.toFixed(2)}`}\r\n                  </CardText>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </TabPane>\r\n        ))}\r\n      </TabContent>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Button, Collapse, ListGroup } from 'reactstrap';\r\nimport {\r\n  faAngleRight, faAngleLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  Map, Marker , GoogleApiWrapper, InfoWindow\r\n} from 'google-maps-react';\r\nimport { MapListItem, MapInfo, FilterDropdown } from './'\r\n\r\nconst businessesData = require('../data/businesses.json');\r\n\r\nexport class MapPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const businesses = businessesData.businesses.filter(({ isOpen }) => isOpen);\r\n\r\n    this.state = {\r\n      isSidebarOpen: false,\r\n      businesses: businesses || [],\r\n      selectedBusiness: null,\r\n      activeMarker: null,\r\n      isInfoWindowShown: false,\r\n      filteredLocation: null,\r\n      filteredService: null,\r\n      mapCenterLocation: {\r\n        lat: 42.030169,\r\n        lng: -89.363343\r\n      },\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.toggleIsSidebarOpen = this.toggleIsSidebarOpen.bind(this);\r\n    this.handleMarkerOnClick = this.handleMarkerOnClick.bind(this);\r\n    this.handleMapOnClick = this.handleMapOnClick.bind(this);\r\n    this.handleInfoWindowOnOpen = this.handleInfoWindowOnOpen.bind(this);\r\n    this.handleBusinessItemOnClick = this.handleBusinessItemOnClick.bind(this);\r\n    this.handleLocationsItemOnClick = this.handleLocationsItemOnClick.bind(this);\r\n    this.handleServicesItemOnClick = this.handleServicesItemOnClick.bind(this);\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n    this.handleGoToOnClick = this.handleGoToOnClick.bind(this);\r\n  }\r\n\r\n  toggleIsSidebarOpen() {\r\n    this.setState(({ isSidebarOpen }) => ({ isSidebarOpen: !isSidebarOpen }));\r\n  }\r\n\r\n  handleMarkerOnClick(markerProps, marker) {\r\n    this.setState({\r\n      selectedBusiness: markerProps.business,\r\n      activeMarker: marker,\r\n      isInfoWindowShown: true\r\n    })\r\n  }\r\n\r\n  handleMapOnClick() {\r\n    this.setState(({ isInfoWindowShown }) => isInfoWindowShown ? ({\r\n      isInfoWindowShown: false,\r\n      activeMarker: null,\r\n      selectedBusiness: null\r\n    }) : null);\r\n  }\r\n\r\n  handleInfoWindowOnOpen() {\r\n    const mapInfo = (\r\n      <MapInfo\r\n        business={this.state.selectedBusiness}\r\n        handleGoToOnClick={this.handleGoToOnClick}\r\n      />\r\n    );\r\n    ReactDOM.render(\r\n      React.Children.only(mapInfo),\r\n      document.getElementById(\"info-window\")\r\n    );\r\n  }\r\n\r\n  handleBusinessItemOnClick(business) {\r\n    this.setState(() => ({\r\n      mapCenterLocation: business.location\r\n    }));\r\n  }\r\n\r\n  handleAddressClick(name, address, city) {\r\n    if ((navigator.platform.indexOf(\"iPhone\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") !== -1)) {\r\n      window.open(`maps://maps.google.com/maps/dir/?daddr=${name}%20${address},%20${city}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/maps/dir/?daddr=${name}%20${address},%20${city}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  handleLocationsItemOnClick(city) {\r\n    let { businesses } = businessesData;\r\n    if (city.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ city: cityData, isOpen }) => (\r\n        isOpen && cityData === city\r\n      ));\r\n    }\r\n\r\n    const { filteredService } = this.state;\r\n    if (filteredService && filteredService.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ services }) => (\r\n        services.includes(filteredService)\r\n      ));\r\n    }\r\n\r\n    this.setState(() => ({ businesses, filteredLocation: city }));\r\n  }\r\n\r\n  handleServicesItemOnClick(service) {\r\n    let { businesses } = businessesData;\r\n    if (service.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ services, isOpen }) => (\r\n        isOpen && services.includes(service)\r\n      ));\r\n    }\r\n\r\n    const { filteredLocation } = this.state;\r\n    if (filteredLocation && filteredLocation.toLowerCase() !== 'all') {\r\n      businesses = businesses.filter(({ city }) => filteredLocation === city);\r\n    }\r\n\r\n    this.setState(() => ({ businesses, filteredService: service }));\r\n  }\r\n\r\n  handleGoToOnClick() {\r\n    const { selectedBusiness: { menuId } } = this.state;\r\n    const { history } = this.props;\r\n    history.push(`/retail-info/businesses/${menuId}`);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isSidebarOpen,\r\n      businesses,\r\n      activeMarker,\r\n      isInfoWindowShown,\r\n      selectedBusiness,\r\n      mapCenterLocation,\r\n    } = this.state;\r\n\r\n    const { google } = this.props;\r\n\r\n    let cities = businessesData.businesses.map(({ city }) => city);\r\n    cities = cities.filter((a, b) => cities.indexOf(a) === b);\r\n    cities.unshift('all');\r\n\r\n    let services = businessesData.businesses.map(({ services }) => services);\r\n    services = [].concat.apply([], services);\r\n    services = services.filter((a, b) => services.indexOf(a) === b);\r\n    services.unshift('all');\r\n\r\n    return (\r\n      <div className=\"d-flex\" style={{ height: '90vh' }}>\r\n        <div className={`position-relative border-right border-dark bg-dark map-sidebar ${!isSidebarOpen ? 'closed' : ''}`}>\r\n          <div className={`d-flex justify-content-between align-items-center py-1 text-secondary sidebar-collapse-header ${!isSidebarOpen ? 'h-100' : ''}`}>\r\n            {isSidebarOpen && (\r\n              <div className=\"d-flex flex-fill\">\r\n                <FilterDropdown\r\n                  items={cities}\r\n                  labelText=\"location\"\r\n                  handleItemOnClick={this.handleLocationsItemOnClick}\r\n                />\r\n\r\n                <FilterDropdown\r\n                  items={services}\r\n                  labelText=\"service\"\r\n                  handleItemOnClick={this.handleServicesItemOnClick}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <Button\r\n              color=\"link\"\r\n              onClick={this.toggleIsSidebarOpen}\r\n              className={`p-0 border-0 text-decoration-none ${!isSidebarOpen ? 'w-100 h-100 d-flex flex-column align-items-center' : ''}`}\r\n            >\r\n              <FontAwesomeIcon\r\n                fixedWidth={isSidebarOpen}\r\n                size={isSidebarOpen ? '2x' : '3x'}\r\n                icon={isSidebarOpen ? faAngleLeft : faAngleRight}\r\n                className=\"text-success\"\r\n              />\r\n              {!isSidebarOpen && (\r\n                <p className=\"mx-auto my-3 text-nowrap font-xxl text-success vertical-text\">Show List</p>\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          <Collapse isOpen={isSidebarOpen} className=\"position-absolute w-100 sidebar-collapse\">\r\n            <ListGroup className=\"mb-3 pb-5 overflow-auto\">\r\n              {businesses.map(business => {\r\n                const isSelected = isInfoWindowShown && selectedBusiness.name === business.name;\r\n                return (\r\n                  <MapListItem\r\n                    key={`${business.name}-${business.city}-${isSelected}`}\r\n                    business={business}\r\n                    isSelected={isSelected}\r\n                    handleItemOnClick={this.handleBusinessItemOnClick}\r\n                    handleAddressClick={this.handleAddressClick}\r\n                  />\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </Collapse>\r\n        </div>\r\n\r\n        <div className=\"flex-fill\">\r\n          <Map\r\n            key={`${mapCenterLocation.lat}-${mapCenterLocation.lng}`}\r\n            google={google}\r\n            zoom={12}\r\n            initialCenter={mapCenterLocation}\r\n            onClick={this.handleMapOnClick}\r\n            className=\"position-relative\"\r\n            containerStyle={{ height: '90%' }}\r\n          >\r\n            {businesses.map((business, index) => (\r\n              <Marker\r\n                key={index}\r\n                title={business.name}\r\n                name={business.name}\r\n                business={business}\r\n                position={business.location}\r\n                onClick={this.handleMarkerOnClick}\r\n              />\r\n            ))}\r\n            <InfoWindow\r\n              marker={activeMarker}\r\n              visible={isInfoWindowShown}\r\n              onClose={this.handleMapOnClick}\r\n              onOpen={this.handleInfoWindowOnOpen}\r\n            >\r\n              <div id=\"info-window\" />\r\n            </InfoWindow>\r\n          </Map>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc'\r\n})(MapPage);\r\n\r\n","import React, { Fragment } from 'react';\r\n\r\nimport { Button } from 'reactstrap';\r\nimport { faCheck, faTimes, faPhoneAlt, faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Services } from './';\r\n\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport default function MapInfo({ business, handleGoToOnClick }) {\r\n  return (\r\n    <Fragment>\r\n      <h6 className=\"text-center\">{business.name}</h6>\r\n      <div className=\"font-weight-bold\">\r\n        <FontAwesomeIcon\r\n          fixedWidth\r\n          icon={faPhoneAlt}\r\n        />\r\n        <a\r\n          href={`tel:${business.phone}`}\r\n          target=\"_blank\"\r\n          className=\"mx-2 font-sm\"\r\n        >\r\n          {business.phone}\r\n        </a>\r\n      </div>\r\n      <div className=\"d-flex mt-1\">\r\n        <FontAwesomeIcon\r\n          fixedWidth\r\n          icon={faClock}\r\n        />\r\n\r\n        <div className=\"flex-fill\">\r\n          {business.hours.split('\\n').map(line => (\r\n            <small key={line} className=\"d-block mx-2 text-capitalize\">\r\n              {line}\r\n            </small>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <Services\r\n        services={business.services}\r\n        businessName={business.name}\r\n        fontSize=\"font-xs\"\r\n        containerClassName=\"my-2\"\r\n      />\r\n\r\n      <div className=\"d-flex justify-content-around align-items-center\">\r\n        {menuData.hasOwnProperty(business.menuId) && (\r\n          <div className=\"d-flex flex-column font-weight-bold text-center text-success\">\r\n            <span>\r\n              Menu\r\n            </span>\r\n            <span>\r\n              Available\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          outline\r\n          color=\"dark\"\r\n          size=\"sm\"\r\n          onClick={handleGoToOnClick}\r\n        >\r\n          More Info\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Collapse, ListGroupItem } from 'reactstrap';\r\nimport {\r\n  faCheck, faTimes, faAngleDown, faAngleLeft,\r\n  faMapMarkerAlt, faPhoneAlt, faUtensils,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Services } from './';\r\n\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport default function MapListItem({\r\n  business, isSelected, handleItemOnClick, handleAddressClick\r\n}) {\r\n  const [isCollapseOpen, setIsOpen] = useState(isSelected);\r\n\r\n  const toggleIsCollapseOpen = (event) => {\r\n    event.stopPropagation();\r\n    setIsOpen(!isCollapseOpen);\r\n  }\r\n\r\n  return (\r\n    <ListGroupItem\r\n      key={business.name}\r\n      onClick={() => handleItemOnClick(business)}\r\n      className=\"py-2 rounded-0 cursor-pointer bg-dark text-secondary\"\r\n    >\r\n      <div className=\"d-flex justify-content-between align-items-center \">\r\n        <span className=\"flex-fill font-weight-bold\">\r\n          {business.name}\r\n        </span>\r\n\r\n        <div className=\"d-flex mx-2\">\r\n          {menuData.hasOwnProperty(business.menuId) && (\r\n            <div>\r\n              <FontAwesomeIcon\r\n                fixedWidth\r\n                icon={faUtensils}\r\n                className=\"mx-1 text-success\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div>\r\n            <a\r\n              href={`tel:${business.phone}`}\r\n              target=\"_blank\"\r\n              className=\"mx-1 font-sm\"\r\n            >\r\n              <FontAwesomeIcon\r\n                fixedWidth\r\n                icon={faPhoneAlt}\r\n                className=\"text-info\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div className=\"text-truncate\">\r\n            <Link\r\n              to=\"#\"\r\n              onClick={() => handleAddressClick(business.name, business.address, business.city)}\r\n              className=\"mx-1 font-sm\"\r\n            >\r\n              <FontAwesomeIcon\r\n                fixedWidth\r\n                icon={faMapMarkerAlt}\r\n                className=\"text-info\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <Button\r\n          outline\r\n          color=\"link\"\r\n          onClick={toggleIsCollapseOpen}\r\n          className=\"p-0 text-secondary outline-none\"\r\n        >\r\n          <FontAwesomeIcon\r\n            fixedWidth\r\n            size=\"lg\"\r\n            icon={isCollapseOpen ? faAngleDown : faAngleLeft}\r\n          />\r\n        </Button>\r\n      </div>\r\n\r\n      <Collapse\r\n        isOpen={isCollapseOpen}\r\n        className=\"pt-2 text-center\"\r\n      >\r\n        <Services\r\n          services={business.services}\r\n          businessName={business.name}\r\n          fontSize=\"font-xs\"\r\n        />\r\n\r\n        <div className=\"d-flex justify-content-around align-items-center mt-3\">\r\n          {menuData.hasOwnProperty(business.menuId) && (\r\n            <div className=\"d-flex flex-column font-weight-bold font-xs text-success\">\r\n              <span>\r\n                Menu\r\n              </span>\r\n              <span>\r\n                Available\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          <Link\r\n            to={`/retail-info/businesses/${business.menuId}`}\r\n            className=\"btn btn-outline-success btn-sm px-4\"\r\n          >\r\n            More Info\r\n          </Link>\r\n        </div>\r\n      </Collapse>\r\n    </ListGroupItem>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dropdown, DropdownToggle, DropdownMenu,\r\n  DropdownItem, Label\r\n} from 'reactstrap';\r\n\r\nexport default function FilterDropdown({\r\n  items, labelText, handleItemOnClick\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState('all');\r\n\r\n  return (\r\n    <div className=\"mx-3\">\r\n      <Label\r\n        for={`${labelText}-dropdown`}\r\n        className=\"m-0 text-capitalize font-weight-bold\"\r\n      >\r\n        {labelText}\r\n      </Label>\r\n      <Dropdown\r\n        id={`${labelText}-dropdown`}\r\n        isOpen={isOpen}\r\n        toggle={() => setIsOpen(!isOpen)}\r\n      >\r\n        <DropdownToggle\r\n          caret\r\n          outline\r\n          color=\"info\"\r\n          size=\"sm\"\r\n          style={{ minWidth: '100px' }}\r\n          className=\"d-flex justify-content-between align-items-center text-capitalize\"\r\n        >\r\n          <span className=\"mx-2\">{selectedItem}</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {items.map(item => (\r\n            <DropdownItem\r\n              key={`${item}-dropdown-item`}\r\n              onClick={() => {\r\n                setSelectedItem(item);\r\n                handleItemOnClick(item);\r\n              }}\r\n              className=\"text-capitalize\"\r\n            >\r\n              {item}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function Services({\r\n  businessName, services, iconSize,\r\n  fontSize, containerClassName\r\n}) {\r\n  return (\r\n    <div className={`d-flex justify-content-around flex-wrap text-secondary ${containerClassName}`}>\r\n      {services.map(service => (\r\n        <div\r\n          key={`${businessName}-${service}`}\r\n          className=\"d-flex flex-column align-items-center mx-2 text-center\"\r\n        >\r\n          <FontAwesomeIcon\r\n            fixedWidth\r\n            size={iconSize}\r\n            icon={faCheck}\r\n            className={'text-success'}\r\n          />\r\n          <span className={`font-weight-bold ${fontSize}`}>\r\n            {service}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Route, Router, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BusinessDetails, SiteHeader,\r\n  MapPage, SiteFooter,\r\n} from './components';\r\n\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={createBrowserHistory()}>\r\n      <SiteHeader />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/retail-info/businesses/:menuId\"\r\n          render={props => <BusinessDetails {...props} />}\r\n        />\r\n\r\n        <Route path=\"/\" render={props => <MapPage {...props} />} />\r\n      </Switch>\r\n\r\n      <SiteFooter />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}