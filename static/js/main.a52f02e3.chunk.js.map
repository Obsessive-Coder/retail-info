{"version":3,"sources":["components/BusinessList.js","components/BusinessGrid.js","components/BusinessDetails.js","App.js","serviceWorker.js","index.js"],"names":["businesses","require","BusinessList","props","state","handleAddressClick","bind","name","address","navigator","platform","indexOf","window","open","this","className","BusinessGrid","Component","booleanFields","propertyName","labelText","map","business","key","Card","CardHeader","CardBody","fixedWidth","icon","faMapMarker","to","onClick","faPhoneAlt","href","phone","faClock","hours","size","faCheck","faTimes","menuId","businessData","menuData","BusinessDetails","menuItems","scrollTo","match","params","filter","google","maps","Map","service","places","PlacesService","request","query","fields","findPlaceFromQuery","results","status","PlacesServiceStatus","OK","i","length","geometry","location","lat","lng","previewImage","photos","image","getUrl","setState","src","alt","zoom","initialCenter","style","position","width","height","price","subText","body","CardTitle","CardText","toFixed","GoogleApiWrapper","apiKey","App","history","createBrowserHistory","exact","path","render","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a52f02e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { BusinessGrid } from './';\r\n\r\n// Restaurant Data File.\r\nconst { businesses } = require('../data/businesses.json');\r\n\r\nexport default class BusinessList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businesses: businesses || [],\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n  }\r\n\r\n  handleAddressClick(name, address) {\r\n    if ((navigator.platform.indexOf(\"iPhone\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") !== -1)) {\r\n      window.open(`maps://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { businesses } = this.state;\r\n\r\n    return (\r\n      <div className=\"overflow-auto\">\r\n        <h1 className=\"py-3 bg-dark text-light text-center page-heading\">\r\n          Restaurants and Bars\r\n        </h1>\r\n\r\n        <div className=\"mx-2\">\r\n          <BusinessGrid\r\n            businesses={businesses}\r\n            handleAddressClick={this.handleAddressClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Button, Card, CardImg, CardBody, CardHeader,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  faCheck, faTimes, faMapMarker,\r\n  faClock, faPhoneAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function BusinessGrid({ businesses, handleAddressClick }) {\r\n  const booleanFields = [{\r\n    propertyName: 'isCurbside',\r\n    labelText: 'Curbside',\r\n  }, {\r\n    propertyName: 'isDelivery',\r\n    labelText: 'Delivery',\r\n  }, {\r\n    propertyName: 'isInStore',\r\n    labelText: 'In-Store',\r\n  }, {\r\n    propertyName: 'isDrivethrough',\r\n    labelText: 'D-T',\r\n  }];\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4\">\r\n      {businesses.map(business => (\r\n        <div key={business.name} className=\"col mb-4\">\r\n          <Card className=\"shadow\">\r\n            {/* <CardImg\r\n              top\r\n              width=\"100%\"\r\n              alt={business.name}\r\n              src=\"https://via.placeholder.com/150x75\"\r\n            /> */}\r\n            <CardHeader className=\"py-1 bg-dark text-light font-weight-bold font-xl\">\r\n              {business.name}\r\n            </CardHeader>\r\n            <CardBody className=\"py-2 text-secondary\">\r\n              <div className=\"text-truncate\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faMapMarker}\r\n                />\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={() => handleAddressClick(business.name, business.address)}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {business.address}\r\n                </Link>\r\n              </div>\r\n              <div className=\"font-weight-bold\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faPhoneAlt}\r\n                />\r\n                <a\r\n                  href={`tel:${business.phone}`}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {business.phone}\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faClock}\r\n                />\r\n                <span className=\"mx-2 text-capitalize\">\r\n                  {business.hours}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"d-flex my-3\">\r\n                {booleanFields.map(({ propertyName, labelText }) => (\r\n                  <div\r\n                    key={propertyName}\r\n                    className=\"d-flex flex-column align-items-center w-25 text-center\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      fixedWidth\r\n                      size=\"2x\"\r\n                      icon={business[propertyName] ? faCheck : faTimes}\r\n                      className={business[propertyName] ? 'text-success' : 'text-danger'}\r\n                    />\r\n                    <span className=\"font-weight-bold font-sm\">\r\n                      {labelText}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <Link\r\n                to={`/businesses/${business.menuId}`}\r\n                className=\"btn btn-block btn-outline-dark\"\r\n              >\r\n                More Info\r\n              </Link>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardTitle, CardText } from 'reactstrap';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Map, Marker , GoogleApiWrapper } from 'google-maps-react';\r\n\r\n// Restaurant Data File.\r\nconst businessData = require('../data/businesses.json')\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport class BusinessDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      business: null,\r\n      menuItems: [],\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n  }\r\n\r\n  handleAddressClick() {\r\n    const { business: { name, address } } = this.state;\r\n\r\n    if ((navigator.platform.indexOf(\"iPhone\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") !== -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") !== -1)) {\r\n      window.open(`maps://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/maps/dir/?daddr=${name}%20${address}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const { menuId } = this.props.match.params;\r\n    const menuItems = menuData[menuId] || [];\r\n    const business = businessData.businesses.filter(business => business.menuId === menuId)[0];\r\n    const { name, address } = business;\r\n\r\n    const { google } = this.props;\r\n    const map = new google.maps.Map(<div></div>);\r\n\r\n    var service = new google.maps.places.PlacesService(map);\r\n\r\n    const request = {\r\n      query: `${name} ${address}`,\r\n      fields: ['photos', 'geometry'],\r\n    };\r\n\r\n    service.findPlaceFromQuery(request, (results, status) => {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        for (var i = 0; i < results.length; i++) {\r\n          const {\r\n            geometry: { location: { lat, lng }},\r\n            photos: [ previewImage ],\r\n          } = results[i];\r\n          business.image = previewImage.getUrl();\r\n          business.location = {\r\n            lat: lat(),\r\n            lng: lng(),\r\n          };\r\n        }\r\n\r\n        this.setState(() => ({ business, menuItems }));\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { business, menuItems } = this.state;\r\n    const { google } = this.props;\r\n\r\n    if (!business) return null;\r\n\r\n    const {\r\n      name,\r\n      address,\r\n      phone,\r\n      hours,\r\n      image,\r\n      location,\r\n    } = business;\r\n\r\n    const booleanFields = [{\r\n      propertyName: 'isCurbside',\r\n      labelText: 'Curbside',\r\n    }, {\r\n      propertyName: 'isDelivery',\r\n      labelText: 'Delivery',\r\n    }, {\r\n      propertyName: 'isInStore',\r\n      labelText: 'In-Store',\r\n    }, {\r\n      propertyName: 'isDrivethrough',\r\n      labelText: 'D-T',\r\n    }];\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"py-3 bg-dark text-light text-center page-heading\">\r\n          Restaurants and Bars\r\n        </h1>\r\n        <div className=\"d-flex flex-column flex-md-row\">\r\n          <div className=\"mb-4 px-1 pb-3 mb-md-0 border-right border-bottom details-sidebar\">\r\n            <img\r\n              src={image}\r\n              alt={name}\r\n              className=\"w-100 h-auto business-details-image\"\r\n            />\r\n            <div className=\"p-3\">\r\n              <h2 className=\"mb-0 text-center text-dark business-heading\">\r\n                {name}\r\n              </h2>\r\n              <Link\r\n                to=\"#\"\r\n                onClick={this.handleAddressClick}\r\n                className=\"mx-2\"\r\n              >\r\n                {address}\r\n              </Link>\r\n              <div className=\"d-sm-flex flex-md-column justify-content-sm-around text-center text-secondary\">\r\n                <div className=\"d-flex justify-content-around font-lg\">\r\n                  <span className=\"font-weight-bold\">Phone:</span>\r\n                  <a\r\n                    href={`tel:${phone}`}\r\n                    className=\"mx-2\"\r\n                  >\r\n                    {phone}\r\n                  </a>\r\n                </div>\r\n                <div className=\"d-flex justify-content-around font-lg\">\r\n                  <span className=\"font-weight-bold\">Hours:</span>\r\n                  <span className=\"mx-2 text-capitalize\">{hours}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex my-3 text-secondary\">\r\n                {booleanFields.map(({ propertyName, labelText }) => (\r\n                  <div\r\n                    key={propertyName}\r\n                    className=\"d-flex flex-column align-items-center flex-fill text-center\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      fixedWidth\r\n                      size=\"2x\"\r\n                      icon={business[propertyName] ? faCheck : faTimes}\r\n                      className={business[propertyName] ? 'text-success' : 'text-danger'}\r\n                    />\r\n                    <span className=\"font-weight-bold font-sm\">\r\n                      {labelText}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {menuItems.length > 0 && (\r\n              <div className=\"px-4 px-sm-5 px-md-0\">\r\n                <Map\r\n                  google={google}\r\n                  zoom={16}\r\n                  initialCenter={location}\r\n                  style={{ position: 'relative',  width: '100%', height: '200px' }}\r\n                  className=\"position-relative\"\r\n                >\r\n                  <Marker\r\n                    position={location}\r\n                    onClick={this.handleAddressClick}\r\n                  />\r\n                </Map>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex-fill px-4 py-2\">\r\n            <h3 className=\"text-center border-bottom menu-heading\">Menu</h3>\r\n\r\n            {menuItems.length === 0 && (\r\n              <div className=\"text-center\">\r\n                <p className=\"font-weight-bold font-xl text-dark\">\r\n                  No Menu Available\r\n                </p>\r\n                <span className=\"font-lg text-secondary\">\r\n                  Please check back later as we are always updating the site.\r\n                </span>\r\n                <p className=\"font-lg text-secondary\">\r\n                  If you have a menu for this business, please email it to&nbsp;\r\n                  <a href=\"mailto:jaredhuff85@gmail.com?Subject=Retail%20Info\">Jared</a>\r\n                  .\r\n                </p>\r\n\r\n                <div>\r\n                  <Map\r\n                    google={google}\r\n                    zoom={16}\r\n                    initialCenter={location}\r\n                    style={{ position: 'relative',  width: '100%', height: '350px' }}\r\n                    className=\"position-relative\"\r\n                  >\r\n                    <Marker\r\n                      position={location}\r\n                      onClick={this.handleAddressClick}\r\n                    />\r\n                  </Map>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              {menuItems.map(({ name, price, subText }) => (\r\n                <Card\r\n                  key={`${name}-${price}`}\r\n                  body\r\n                  className=\"d-flex flex-sm-row align-items-center mb-2 bg-light shadow-sm\"\r\n                >\r\n                  <CardTitle className=\"flex-fill d-flex flex-column mb-2 mb-sm-0  text-dark font-weight-bold font-lg\">\r\n                    <span>{name}</span>\r\n                    {subText && (\r\n                      <small className=\"font-italic\">{subText}</small>\r\n                    )}\r\n                  </CardTitle>\r\n                  <CardText className=\"text-dark font-weight-bold font-xl\">\r\n                    {`$${price.toFixed(2)}`}\r\n                  </CardText>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc'\r\n})(BusinessDetails);\r\n","import React from 'react';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Route, Router, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BusinessList, BusinessDetails } from './components';\r\n\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={createBrowserHistory()}>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/businesses/:menuId\"\r\n          render={props => <BusinessDetails {...props} />}\r\n        />\r\n        <Route exact path=\"/retail-info/businesses\" render={props => <BusinessList {...props} />} />\r\n        <Route path=\"/\" render={props => <BusinessList {...props} />} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}