{"version":3,"sources":["components/BusinessList.js","components/BusinessGrid.js","components/BusinessDetails.js","App.js","serviceWorker.js","index.js"],"names":["dataFile","require","BusinessList","props","state","businesses","handleAddressClick","bind","address","navigator","platform","indexOf","window","open","this","className","BusinessGrid","Component","booleanFields","propertyName","labelText","map","business","key","name","Card","CardHeader","CardBody","fixedWidth","icon","faMapMarker","onClick","faPhoneAlt","href","phone","faClock","hours","size","faCheck","faTimes","to","menuId","businessData","menuData","BusinessDetails","menuItems","scrollTo","match","params","filter","setState","length","price","subText","body","CardTitle","CardText","toFixed","App","history","createBrowserHistory","exact","path","render","Boolean","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6168e74.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { BusinessTable, BusinessGrid } from './';\r\n\r\n// Restaurant Data File.\r\nconst dataFile = require('../data/businesses.json');\r\n\r\nexport default class BusinessList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businesses: dataFile.businesses || [],\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n  }\r\n\r\n  handleAddressClick(address) {\r\n    if ((navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") != -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") != -1)) {\r\n      window.open(`maps://maps.google.com/dir/?daddr=${address}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/dir/?daddr=${address}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  // componentDidMount() {\r\n    // https://maps.googleapis.com/maps/api/place/textsearch/json?query=123+main+street&key=AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc\r\n    // axios.get('https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=alfanos+oregon+il&key=AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc')\r\n    //   .then(result => {\r\n        // CmRaAAAAOmfNZQhEKPzYNWHmtbmLg5Kd7guIP2Pp_QsFd8E3cUH2UewiZHsMJAizWJmYVq8_jfFofTsMFpK-92G_27ZowH7y4MjwyBQJkrLhu9meCJbyRvT1rQSbkjTAw4yvzGAWEhAHoq0pPnjJqjnPhsvd4v74GhRZ7gwkZnGQNWsOWM0Ao97ztYyUzw\r\n        // console.log(result.data);\r\n\r\n        // axios.get('https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU&key=AIzaSyBWc45Eb4D3pf2A-I3aki-aM8HxMHRPfpc')\r\n        // .then(resultX => {\r\n        //   console.log(resultX.data);\r\n        // })\r\n      // })\r\n      // .catch(error => console.log(error));\r\n  // }\r\n\r\n  render() {\r\n    const { businesses } = this.state;\r\n\r\n    return (\r\n      <div className=\"overflow-auto\">\r\n        <h1 className=\"py-3 bg-dark text-light text-center page-heading\">\r\n          Restaurants and Bars (updated)\r\n        </h1>\r\n\r\n        <div className=\"mx-2\">\r\n          <BusinessGrid businesses={businesses} handleAddressClick={this.handleAddressClick} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Button, Card, CardImg, CardBody, CardHeader,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  faCheck, faTimes, faMapMarker,\r\n  faClock, faPhoneAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function BusinessGrid({ businesses, handleAddressClick }) {\r\n  const booleanFields = [{\r\n    propertyName: 'isCurbside',\r\n    labelText: 'Curbside',\r\n  }, {\r\n    propertyName: 'isDelivery',\r\n    labelText: 'Delivery',\r\n  }, {\r\n    propertyName: 'isInStore',\r\n    labelText: 'In-Store',\r\n  }, {\r\n    propertyName: 'isDrivethrough',\r\n    labelText: 'D-T',\r\n  }];\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4\">\r\n      {businesses.map(business => (\r\n        <div key={business.name} className=\"col mb-4\">\r\n          <Card className=\"shadow\">\r\n            {/* <CardImg\r\n              top\r\n              width=\"100%\"\r\n              alt={business.name}\r\n              src=\"https://via.placeholder.com/150x75\"\r\n            /> */}\r\n            <CardHeader className=\"py-1 bg-dark text-light font-weight-bold font-xl\">\r\n              {business.name}\r\n            </CardHeader>\r\n            <CardBody className=\"py-2 text-secondary\">\r\n              <div className=\"text-truncate\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faMapMarker}\r\n                />\r\n                <Link\r\n                  onClick={() => handleAddressClick(business.address)}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {business.address}\r\n                </Link>\r\n              </div>\r\n              <div className=\"font-weight-bold\">\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faPhoneAlt}\r\n                />\r\n                <a\r\n                  href={`tel:${business.phone}`}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {business.phone}\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <FontAwesomeIcon\r\n                  fixedWidth\r\n                  icon={faClock}\r\n                />\r\n                <span className=\"mx-2 text-capitalize\">\r\n                  {business.hours}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"d-flex my-3\">\r\n                {booleanFields.map(({ propertyName, labelText }) => (\r\n                  <div\r\n                    key={propertyName}\r\n                    className=\"d-flex flex-column align-items-center w-25 text-center\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      fixedWidth\r\n                      size=\"2x\"\r\n                      icon={business[propertyName] ? faCheck : faTimes}\r\n                      className={business[propertyName] ? 'text-success' : 'text-danger'}\r\n                    />\r\n                    <span className=\"font-weight-bold font-sm\">\r\n                      {labelText}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <Link\r\n                to={`/businesses/${business.menuId}`}\r\n                className=\"btn btn-block btn-outline-dark\"\r\n              >\r\n                More Info\r\n              </Link>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardTitle, CardText } from 'reactstrap';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// Restaurant Data File.\r\nconst businessData = require('../data/businesses.json')\r\nconst menuData = require('../data/menus.json');\r\n\r\nexport default class BusinessDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      business: null,\r\n      menuItems: [],\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleAddressClick = this.handleAddressClick.bind(this);\r\n  }\r\n\r\n  handleAddressClick() {\r\n    const { business: { address } } = this.state;\r\n\r\n    if ((navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n     (navigator.platform.indexOf(\"iPad\") != -1) ||\r\n     (navigator.platform.indexOf(\"iPod\") != -1)) {\r\n      window.open(`maps://maps.google.com/dir/?daddr=${address}&amp;ll=`);\r\n    } else {\r\n      window.open(`https://maps.google.com/dir/?daddr=${address}&amp;ll=`);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const { menuId } = this.props.match.params;\r\n    const menuItems = menuData[menuId] || [];\r\n    const business = businessData.businesses.filter(business => business.menuId === menuId)[0];\r\n\r\n    this.setState(() => ({ business, menuItems }))\r\n  }\r\n\r\n  render() {\r\n    const { business, menuItems } = this.state;\r\n\r\n    if (!business) return null;\r\n\r\n    const {\r\n      name,\r\n      address,\r\n      phone,\r\n      hours,\r\n    } = business;\r\n\r\n    const booleanFields = [{\r\n      propertyName: 'isCurbside',\r\n      labelText: 'Curbside',\r\n    }, {\r\n      propertyName: 'isDelivery',\r\n      labelText: 'Delivery',\r\n    }, {\r\n      propertyName: 'isInStore',\r\n      labelText: 'In-Store',\r\n    }, {\r\n      propertyName: 'isDrivethrough',\r\n      labelText: 'D-T',\r\n    }];\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"py-3 bg-dark text-light text-center page-heading\">\r\n          Restaurants and Bars\r\n        </h1>\r\n        <div className=\"d-flex flex-column flex-md-row mt-4\">\r\n          <div className=\"mb-4 px-4 mb-md-0 border-right border-bottom\">\r\n            <h2 className=\"mb-0 text-center text-dark business-heading\">\r\n              {name}\r\n            </h2>\r\n            {/* <p className=\"mb-0 text-center text-secondary\">{address}</p> */}\r\n            <Link\r\n              onClick={this.handleAddressClick}\r\n              className=\"mx-2\"\r\n            >\r\n              {address}\r\n            </Link>\r\n            <div className=\"d-sm-flex flex-md-column justify-content-sm-around text-center text-secondary\">\r\n              <div className=\"d-flex justify-content-around font-lg\">\r\n                <span className=\"font-weight-bold\">Phone:</span>\r\n                <a\r\n                  href={`tel:${phone}`}\r\n                  className=\"mx-2\"\r\n                >\r\n                  {phone}\r\n                </a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-around font-lg\">\r\n                <span className=\"font-weight-bold\">Hours:</span>\r\n                <span className=\"mx-2 text-capitalize\">{hours}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex my-3 text-secondary\">\r\n              {booleanFields.map(({ propertyName, labelText }) => (\r\n                <div\r\n                  key={propertyName}\r\n                  className=\"d-flex flex-column align-items-center flex-fill text-center\"\r\n                >\r\n                  <FontAwesomeIcon\r\n                    fixedWidth\r\n                    size=\"2x\"\r\n                    icon={business[propertyName] ? faCheck : faTimes}\r\n                    className={business[propertyName] ? 'text-success' : 'text-danger'}\r\n                  />\r\n                  <span className=\"font-weight-bold font-sm\">\r\n                    {labelText}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-fill px-4\">\r\n            <h3 className=\"text-center border-bottom menu-heading\">Menu</h3>\r\n\r\n            {menuItems.length === 0 && (\r\n              <div className=\"text-center\">\r\n                <p className=\"font-weight-bold font-xl text-dark\">\r\n                  No Menu Available\r\n                </p>\r\n                <span className=\"font-lg text-secondary\">\r\n                  Please check back later as we are always updating the site.\r\n                </span>\r\n                <p className=\"font-lg text-secondary\">\r\n                  If you have a menu for this business, please email it to&nbsp;\r\n                  <a href=\"mailto:jaredhuff85@gmail.com?Subject=Retail%20Info\">Jared</a>\r\n                  .\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              {menuItems.map(({ name, price, subText }) => (\r\n                <Card\r\n                  key={`${name}-${price}`}\r\n                  body\r\n                  className=\"d-flex flex-sm-row align-items-center mb-2 bg-light shadow-sm\"\r\n                >\r\n                  <CardTitle className=\"flex-fill d-flex flex-column mb-2 mb-sm-0  text-dark font-weight-bold font-lg\">\r\n                    <span>{name}</span>\r\n                    {subText && (\r\n                      <small className=\"font-italic\">{subText}</small>\r\n                    )}\r\n                  </CardTitle>\r\n                  <CardText className=\"text-dark font-weight-bold font-xl\">\r\n                    {`$${price.toFixed(2)}`}\r\n                  </CardText>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BusinessList, BusinessDetails } from './components';\n\nimport './index.css';\n\nfunction App() {\n  return (\n    <Router history={createBrowserHistory()}>\n      <Switch>\n        <Route\n          exact\n          path=\"/businesses/:menuId\"\n          render={props => <BusinessDetails {...props} />}\n        />\n        <Route path=\"/\" render={props => <BusinessList {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}